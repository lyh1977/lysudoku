default:
  image: cimg/android:2022.06.1
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .gradle/

variables:
  CACHE_FALLBACK_KEY: develop-protected
  MEMORY_CONFIG: "-Xmx3200m -Xms256m -XX:MaxMetaspaceSize=1g"
  MEMORY_CONFIG_DEBUG: "-Xmx3200m -Xms256m -XX:MaxMetaspaceSize=1g -verbose:gc -Xlog:gc*"
  JVM_OPTS: ${MEMORY_CONFIG}
  JAVA_TOOL_OPTIONS: ${MEMORY_CONFIG}
  GRADLE_OPTS: ${MEMORY_CONFIG}
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/OpenSudoku/${CI_COMMIT_TAG}"
  PACKAGE_APK: "opensudoku-${CI_COMMIT_TAG}.apk"
  PACKAGE_APK_IDSIG: "opensudoku-${CI_COMMIT_TAG}.apk.idsig"

stages:
  - Assemble
  - APK
  - Publish
  - Release

Assemble Debug:
  stage: Assemble
  script: ./gradlew assembleDebug

Assemble Release:
  stage: Assemble
  script: ./gradlew assembleRelease
  artifacts:
    name: opensudoku-release-unsigned-${CI_COMMIT_SHA}
    paths:
      - app/build/outputs/apk/release/app-release-unsigned.apk

Generate Signed Develop APK:
  stage: APK
  script:
    - openssl aes-256-cbc -K ${OPENSUDOKU_KEYSTORE_KEY} -iv ${OPENSUDOKU_KEYSTORE_IV} -in opensudoku-keystore.enc -out opensudoku-keystore -base64 -d
    - mkdir -p ${CI_PROJECT_DIR}/opensudoku-release
    - cp app/build/outputs/apk/release/app-release-unsigned.apk ${CI_PROJECT_DIR}/opensudoku-release/opensudoku-${CI_COMMIT_SHA}.apk
    - ${ANDROID_HOME}/build-tools/*/apksigner sign --verbose --ks ${CI_PROJECT_DIR}/opensudoku-keystore --ks-pass pass:${OPENSUDOKU_KEYSTORE_STOREPASS} --key-pass pass:${OPENSUDOKU_KEYSTORE_KEYPASS} ${CI_PROJECT_DIR}/opensudoku-release/opensudoku-${CI_COMMIT_SHA}.apk
    - ${ANDROID_HOME}/build-tools/*/apksigner verify --verbose ${CI_PROJECT_DIR}/opensudoku-release/opensudoku-${CI_COMMIT_SHA}.apk
  artifacts:
    name: opensudoku-${CI_COMMIT_SHA}
    paths:
      - opensudoku-release/
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop" && $CI_PROJECT_ID == "38056645"

Generate Signed APK:
  stage: APK
  script:
    - openssl aes-256-cbc -K ${OPENSUDOKU_KEYSTORE_KEY} -iv ${OPENSUDOKU_KEYSTORE_IV} -in opensudoku-keystore.enc -out opensudoku-keystore -base64 -d
    - mkdir -p ${CI_PROJECT_DIR}/opensudoku-release
    - cp app/build/outputs/apk/release/app-release-unsigned.apk ${CI_PROJECT_DIR}/opensudoku-release/${PACKAGE_APK}
    - ${ANDROID_HOME}/build-tools/*/apksigner sign --verbose --ks ${CI_PROJECT_DIR}/opensudoku-keystore --ks-pass pass:${OPENSUDOKU_KEYSTORE_STOREPASS} --key-pass pass:${OPENSUDOKU_KEYSTORE_KEYPASS} ${CI_PROJECT_DIR}/opensudoku-release/${PACKAGE_APK}
    - ${ANDROID_HOME}/build-tools/*/apksigner verify --verbose ${CI_PROJECT_DIR}/opensudoku-release/${PACKAGE_APK}
  artifacts:
    name: opensudoku-${CI_COMMIT_TAG}
    paths:
      - opensudoku-release/
  rules:
    - if: $CI_COMMIT_TAG && $CI_PROJECT_ID == "38056645"

Publish Signed APK:
  stage: Publish
  image: curlimages/curl:latest
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file opensudoku-release/${PACKAGE_APK} "${PACKAGE_REGISTRY_URL}/${PACKAGE_APK}"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file opensudoku-release/${PACKAGE_APK_IDSIG} "${PACKAGE_REGISTRY_URL}/${PACKAGE_APK_IDSIG}"
  rules:
    - if: $CI_COMMIT_TAG && $CI_PROJECT_ID == "38056645"

Release:
  stage: Release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script: |
    release-cli create --name "Release ${CI_COMMIT_TAG}" --tag-name ${CI_COMMIT_TAG} \
      --assets-link "{\"name\":\"${PACKAGE_APK}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${PACKAGE_APK}\"}" \
      --assets-link "{\"name\":\"${PACKAGE_APK_IDSIG}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${PACKAGE_APK_IDSIG}\"}"
  rules:
    - if: $CI_COMMIT_TAG && $CI_PROJECT_ID == "38056645"
